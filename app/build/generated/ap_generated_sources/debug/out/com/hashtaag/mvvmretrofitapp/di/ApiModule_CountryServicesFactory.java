// Generated by Dagger (https://google.github.io/dagger).
package com.hashtaag.mvvmretrofitapp.di;

import com.hashtaag.mvvmretrofitapp.model.CountryServices;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApiModule_CountryServicesFactory implements Factory<CountryServices> {
  private final ApiModule module;

  public ApiModule_CountryServicesFactory(ApiModule module) {
    this.module = module;
  }

  @Override
  public CountryServices get() {
    return Preconditions.checkNotNull(
        module.countryServices(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApiModule_CountryServicesFactory create(ApiModule module) {
    return new ApiModule_CountryServicesFactory(module);
  }

  public static CountryServices proxyCountryServices(ApiModule instance) {
    return Preconditions.checkNotNull(
        instance.countryServices(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
